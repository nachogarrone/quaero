package com.ucu.teoria.dos.quaero.parser;

import java.io.*;
import java.util.*;
import java_cup.runtime.Symbol;
import com.ucu.teoria.dos.quaero.ast.*;

parser code {:


	public static Symbol parse(Reader input) throws Exception {
		return (new Parser(new Lexer(input))).parse();
	}

	public static Symbol parse(String input) throws Exception {
		return parse(new StringReader(input));
	}

	public static void main(String[] args) throws Exception {
		if (args.length < 1) {
			System.out.println(parse(new InputStreamReader(System.in, "UTF8")).value);
		} else for (int i = 0; i < args.length; ++i) {
			System.out.println(parse(new InputStreamReader(new FileInputStream(args[i]), "UTF8")).value);
		}
	}
:}

// Rules

terminal LPAREN;
terminal RPAREN;
terminal SEMICOLON;
terminal COMMA;


non terminal Stmt stmt;

stmt      ::=TAG:tag Lista:l
          {: RESULT = l; :}
;

list      ::=LPAREN elems:es RPAREN
           {: RESULT = es; :}
;

elems      ::= attr:a
           {: RESULT = a; :}
           | elems:e COMMA attr:a
           {: RESULT = e; e.add(a); :}
;

attr      ::= TAG:t SEMICOLON STR:s
           {: RESULT = String.valueOf(s); :}
           | TAG:t SEMICOLON NUM:n
           {: RESULT = Double.parseDouble(n); :}
           | TAG:t SEMICOLON true
           {: RESULT = true; :}
           | TAG:t SEMICOLON false
           {: RESULT = false; :}
           | stmt:s
           {: RESULT = s; :}
;